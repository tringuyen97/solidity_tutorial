{
	"id": "613d0a84e6a04eb858966996f3175403",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/DataType.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity 0.8.26;\r\n\r\ncontract DataType {\r\n\r\n    //fixed-size types\r\n    bool isEnable; //true, false\r\n    uint a; //1 , 2, 3\r\n    address sender; // 0xsdaf234234..ds123f\r\n    bytes32 data;\r\n\r\n    //variable-size types\r\n    string name; // \"hello world\"\r\n    bytes data1;\r\n    uint[] array; // \"[1, 4, 45]\"\r\n\r\n    function doSomething() external {\r\n        array.push(2);\r\n        array.push(5);\r\n\r\n        array[1];\r\n        array[0] = 9;\r\n\r\n        delete array[0];\r\n    }\r\n\r\n    function bar() external {\r\n        uint[] memory newArray = new uint[](10);\r\n        newArray[0] = 2;\r\n        newArray[1] = 4;\r\n        \r\n        newArray[0];\r\n        delete newArray[0];\r\n    }\r\n\r\n    mapping (address => uint) balances;\r\n    function test() external {\r\n        balances[msg.sender] = 100;\r\n        balances[msg.sender] = 200;\r\n        balances[msg.sender];\r\n\r\n        // default value;\r\n        // balances[\"keyNotExist\"]; default value\r\n        \r\n    }\r\n\r\n    //nested mappings\r\n    mapping (address => mapping (address => bool)) approved;\r\n\r\n\r\n    // user define\r\n    struct User {\r\n        uint id;\r\n        string name;\r\n        bool isFriend;\r\n    }\r\n\r\n    enum Color {\r\n        RED, \r\n        GREED, \r\n        BLUE\r\n    }\r\n\r\n    //built in\r\n    // msg.sender s;\r\n    // msg.value v;\r\n\r\n\r\n    \r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"contracts/DataType.sol": {
				"DataType": {
					"abi": [
						{
							"inputs": [],
							"name": "bar",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "doSomething",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "test",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/DataType.sol\":60:1340  contract DataType {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/DataType.sol\":60:1340  contract DataType {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x82692679\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xf8a8fd6d\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xfebb0f7e\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/DataType.sol\":352:512  function doSomething() external {... */\n    tag_3:\n      tag_6\n      tag_7\n      jump\t// in\n    tag_6:\n      stop\n        /* \"contracts/DataType.sol\":764:992  function test() external {... */\n    tag_4:\n      tag_8\n      tag_9\n      jump\t// in\n    tag_8:\n      stop\n        /* \"contracts/DataType.sol\":520:715  function bar() external {... */\n    tag_5:\n      tag_10\n      tag_11\n      jump\t// in\n    tag_10:\n      stop\n        /* \"contracts/DataType.sol\":352:512  function doSomething() external {... */\n    tag_7:\n        /* \"contracts/DataType.sol\":395:400  array */\n      0x06\n        /* \"contracts/DataType.sol\":406:407  2 */\n      0x02\n        /* \"contracts/DataType.sol\":395:408  array.push(2) */\n      swap1\n      dup1\n      0x01\n      dup2\n      sload\n      add\n      dup1\n      dup3\n      sstore\n      dup1\n      swap2\n      pop\n      pop\n      0x01\n      swap1\n      sub\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      swap2\n      swap1\n      swap2\n      swap1\n      swap2\n      pop\n      sstore\n        /* \"contracts/DataType.sol\":419:424  array */\n      0x06\n        /* \"contracts/DataType.sol\":430:431  5 */\n      0x05\n        /* \"contracts/DataType.sol\":419:432  array.push(5) */\n      swap1\n      dup1\n      0x01\n      dup2\n      sload\n      add\n      dup1\n      dup3\n      sstore\n      dup1\n      swap2\n      pop\n      pop\n      0x01\n      swap1\n      sub\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      swap2\n      swap1\n      swap2\n      swap1\n      swap2\n      pop\n      sstore\n        /* \"contracts/DataType.sol\":445:450  array */\n      0x06\n        /* \"contracts/DataType.sol\":451:452  1 */\n      0x01\n        /* \"contracts/DataType.sol\":445:453  array[1] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_15\n      jumpi\n      tag_16\n      tag_17\n      jump\t// in\n    tag_16:\n    tag_15:\n      swap1\n      0x00\n      mstore\n      pop(keccak256(0x00, 0x20))\n      pop\n        /* \"contracts/DataType.sol\":475:476  9 */\n      0x09\n        /* \"contracts/DataType.sol\":464:469  array */\n      0x06\n        /* \"contracts/DataType.sol\":470:471  0 */\n      0x00\n        /* \"contracts/DataType.sol\":464:472  array[0] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_19\n      jumpi\n      tag_20\n      tag_17\n      jump\t// in\n    tag_20:\n    tag_19:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n        /* \"contracts/DataType.sol\":464:476  array[0] = 9 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/DataType.sol\":496:501  array */\n      0x06\n        /* \"contracts/DataType.sol\":502:503  0 */\n      0x00\n        /* \"contracts/DataType.sol\":496:504  array[0] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_22\n      jumpi\n      tag_23\n      tag_17\n      jump\t// in\n    tag_23:\n    tag_22:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n        /* \"contracts/DataType.sol\":489:504  delete array[0] */\n      0x00\n      swap1\n      sstore\n        /* \"contracts/DataType.sol\":352:512  function doSomething() external {... */\n      jump\t// out\n        /* \"contracts/DataType.sol\":764:992  function test() external {... */\n    tag_9:\n        /* \"contracts/DataType.sol\":823:826  100 */\n      0x64\n        /* \"contracts/DataType.sol\":800:808  balances */\n      0x07\n        /* \"contracts/DataType.sol\":800:820  balances[msg.sender] */\n      0x00\n        /* \"contracts/DataType.sol\":809:819  msg.sender */\n      caller\n        /* \"contracts/DataType.sol\":800:820  balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/DataType.sol\":800:826  balances[msg.sender] = 100 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/DataType.sol\":860:863  200 */\n      0xc8\n        /* \"contracts/DataType.sol\":837:845  balances */\n      0x07\n        /* \"contracts/DataType.sol\":837:857  balances[msg.sender] */\n      0x00\n        /* \"contracts/DataType.sol\":846:856  msg.sender */\n      caller\n        /* \"contracts/DataType.sol\":837:857  balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/DataType.sol\":837:863  balances[msg.sender] = 200 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/DataType.sol\":874:882  balances */\n      0x07\n        /* \"contracts/DataType.sol\":874:894  balances[msg.sender] */\n      0x00\n        /* \"contracts/DataType.sol\":883:893  msg.sender */\n      caller\n        /* \"contracts/DataType.sol\":874:894  balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      pop\n        /* \"contracts/DataType.sol\":764:992  function test() external {... */\n      jump\t// out\n        /* \"contracts/DataType.sol\":520:715  function bar() external {... */\n    tag_11:\n        /* \"contracts/DataType.sol\":555:577  uint[] memory newArray */\n      0x00\n        /* \"contracts/DataType.sol\":591:593  10 */\n      0x0a\n        /* \"contracts/DataType.sol\":580:594  new uint[](10) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_27\n      jumpi\n      tag_28\n      tag_29\n      jump\t// in\n    tag_28:\n    tag_27:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_30\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n    tag_30:\n      pop\n        /* \"contracts/DataType.sol\":555:594  uint[] memory newArray = new uint[](10) */\n      swap1\n      pop\n        /* \"contracts/DataType.sol\":619:620  2 */\n      0x02\n        /* \"contracts/DataType.sol\":605:613  newArray */\n      dup2\n        /* \"contracts/DataType.sol\":614:615  0 */\n      0x00\n        /* \"contracts/DataType.sol\":605:616  newArray[0] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_31\n      jumpi\n      tag_32\n      tag_17\n      jump\t// in\n    tag_32:\n    tag_31:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"contracts/DataType.sol\":605:620  newArray[0] = 2 */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contracts/DataType.sol\":645:646  4 */\n      0x04\n        /* \"contracts/DataType.sol\":631:639  newArray */\n      dup2\n        /* \"contracts/DataType.sol\":640:641  1 */\n      0x01\n        /* \"contracts/DataType.sol\":631:642  newArray[1] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_33\n      jumpi\n      tag_34\n      tag_17\n      jump\t// in\n    tag_34:\n    tag_33:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"contracts/DataType.sol\":631:646  newArray[1] = 4 */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contracts/DataType.sol\":667:675  newArray */\n      dup1\n        /* \"contracts/DataType.sol\":676:677  0 */\n      0x00\n        /* \"contracts/DataType.sol\":667:678  newArray[0] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_35\n      jumpi\n      tag_36\n      tag_17\n      jump\t// in\n    tag_36:\n    tag_35:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n      pop\n        /* \"contracts/DataType.sol\":696:704  newArray */\n      dup1\n        /* \"contracts/DataType.sol\":705:706  0 */\n      0x00\n        /* \"contracts/DataType.sol\":696:707  newArray[0] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_37\n      jumpi\n      tag_38\n      tag_17\n      jump\t// in\n    tag_38:\n    tag_37:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"contracts/DataType.sol\":689:707  delete newArray[0] */\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"contracts/DataType.sol\":544:715  {... */\n      pop\n        /* \"contracts/DataType.sol\":520:715  function bar() external {... */\n      jump\t// out\n        /* \"#utility.yul\":7:187   */\n    tag_17:\n        /* \"#utility.yul\":55:132   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":52:53   */\n      0x00\n        /* \"#utility.yul\":45:133   */\n      mstore\n        /* \"#utility.yul\":152:156   */\n      0x32\n        /* \"#utility.yul\":149:150   */\n      0x04\n        /* \"#utility.yul\":142:157   */\n      mstore\n        /* \"#utility.yul\":176:180   */\n      0x24\n        /* \"#utility.yul\":173:174   */\n      0x00\n        /* \"#utility.yul\":166:181   */\n      revert\n        /* \"#utility.yul\":193:373   */\n    tag_29:\n        /* \"#utility.yul\":241:318   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":238:239   */\n      0x00\n        /* \"#utility.yul\":231:319   */\n      mstore\n        /* \"#utility.yul\":338:342   */\n      0x41\n        /* \"#utility.yul\":335:336   */\n      0x04\n        /* \"#utility.yul\":328:343   */\n      mstore\n        /* \"#utility.yul\":362:366   */\n      0x24\n        /* \"#utility.yul\":359:360   */\n      0x00\n        /* \"#utility.yul\":352:367   */\n      revert\n\n    auxdata: 0xa26469706673582212201f04891380c148081867fe9e678700ba814a28d0c6c3dcd2cc96536828592b6464736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600e575f80fd5b506103338061001c5f395ff3fe608060405234801561000f575f80fd5b506004361061003f575f3560e01c80638269267914610043578063f8a8fd6d1461004d578063febb0f7e14610057575b5f80fd5b61004b610061565b005b610055610110565b005b61005f6101d6565b005b60066002908060018154018082558091505060019003905f5260205f20015f909190919091505560066005908060018154018082558091505060019003905f5260205f20015f909190919091505560066001815481106100c4576100c36102a3565b5b905f5260205f205050600960065f815481106100e3576100e26102a3565b5b905f5260205f20018190555060065f81548110610103576101026102a3565b5b905f5260205f20015f9055565b606460075f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208190555060c860075f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208190555060075f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2050565b5f600a67ffffffffffffffff8111156101f2576101f16102d0565b5b6040519080825280602002602001820160405280156102205781602001602082028036833780820191505090505b5090506002815f81518110610238576102376102a3565b5b60200260200101818152505060048160018151811061025a576102596102a3565b5b602002602001018181525050805f81518110610279576102786102a3565b5b602002602001015150805f81518110610295576102946102a3565b5b602002602001015f81525050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffdfea26469706673582212201f04891380c148081867fe9e678700ba814a28d0c6c3dcd2cc96536828592b6464736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x333 DUP1 PUSH2 0x1C PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x3F JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x82692679 EQ PUSH2 0x43 JUMPI DUP1 PUSH4 0xF8A8FD6D EQ PUSH2 0x4D JUMPI DUP1 PUSH4 0xFEBB0F7E EQ PUSH2 0x57 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x4B PUSH2 0x61 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x55 PUSH2 0x110 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x5F PUSH2 0x1D6 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x6 PUSH1 0x2 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE PUSH1 0x6 PUSH1 0x5 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE PUSH1 0x6 PUSH1 0x1 DUP2 SLOAD DUP2 LT PUSH2 0xC4 JUMPI PUSH2 0xC3 PUSH2 0x2A3 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 POP POP PUSH1 0x9 PUSH1 0x6 PUSH0 DUP2 SLOAD DUP2 LT PUSH2 0xE3 JUMPI PUSH2 0xE2 PUSH2 0x2A3 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x6 PUSH0 DUP2 SLOAD DUP2 LT PUSH2 0x103 JUMPI PUSH2 0x102 PUSH2 0x2A3 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x64 PUSH1 0x7 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0xC8 PUSH1 0x7 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x7 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 POP JUMP JUMPDEST PUSH0 PUSH1 0xA PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1F2 JUMPI PUSH2 0x1F1 PUSH2 0x2D0 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x220 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x2 DUP2 PUSH0 DUP2 MLOAD DUP2 LT PUSH2 0x238 JUMPI PUSH2 0x237 PUSH2 0x2A3 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH1 0x4 DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x25A JUMPI PUSH2 0x259 PUSH2 0x2A3 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP1 PUSH0 DUP2 MLOAD DUP2 LT PUSH2 0x279 JUMPI PUSH2 0x278 PUSH2 0x2A3 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD POP DUP1 PUSH0 DUP2 MLOAD DUP2 LT PUSH2 0x295 JUMPI PUSH2 0x294 PUSH2 0x2A3 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD PUSH0 DUP2 MSTORE POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x1F DIV DUP10 SGT DUP1 0xC1 BASEFEE ADDMOD XOR PUSH8 0xFE9E678700BA814A 0x28 0xD0 0xC6 0xC3 0xDC 0xD2 0xCC SWAP7 MSTORE8 PUSH9 0x28592B6464736F6C63 NUMBER STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "60:1280:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@bar_83": {
									"entryPoint": 470,
									"id": 83,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@doSomething_47": {
									"entryPoint": 97,
									"id": 47,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@test_110": {
									"entryPoint": 272,
									"id": 110,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 675,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 720,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:376:1",
										"nodeType": "YulBlock",
										"src": "0:376:1",
										"statements": [
											{
												"body": {
													"nativeSrc": "35:152:1",
													"nodeType": "YulBlock",
													"src": "35:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "52:1:1",
																		"nodeType": "YulLiteral",
																		"src": "52:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "55:77:1",
																		"nodeType": "YulLiteral",
																		"src": "55:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "45:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "45:6:1"
																},
																"nativeSrc": "45:88:1",
																"nodeType": "YulFunctionCall",
																"src": "45:88:1"
															},
															"nativeSrc": "45:88:1",
															"nodeType": "YulExpressionStatement",
															"src": "45:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "149:1:1",
																		"nodeType": "YulLiteral",
																		"src": "149:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "152:4:1",
																		"nodeType": "YulLiteral",
																		"src": "152:4:1",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "142:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "142:6:1"
																},
																"nativeSrc": "142:15:1",
																"nodeType": "YulFunctionCall",
																"src": "142:15:1"
															},
															"nativeSrc": "142:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "142:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "173:1:1",
																		"nodeType": "YulLiteral",
																		"src": "173:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "176:4:1",
																		"nodeType": "YulLiteral",
																		"src": "176:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "166:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "166:6:1"
																},
																"nativeSrc": "166:15:1",
																"nodeType": "YulFunctionCall",
																"src": "166:15:1"
															},
															"nativeSrc": "166:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "166:15:1"
														}
													]
												},
												"name": "panic_error_0x32",
												"nativeSrc": "7:180:1",
												"nodeType": "YulFunctionDefinition",
												"src": "7:180:1"
											},
											{
												"body": {
													"nativeSrc": "221:152:1",
													"nodeType": "YulBlock",
													"src": "221:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "238:1:1",
																		"nodeType": "YulLiteral",
																		"src": "238:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "241:77:1",
																		"nodeType": "YulLiteral",
																		"src": "241:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "231:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "231:6:1"
																},
																"nativeSrc": "231:88:1",
																"nodeType": "YulFunctionCall",
																"src": "231:88:1"
															},
															"nativeSrc": "231:88:1",
															"nodeType": "YulExpressionStatement",
															"src": "231:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "335:1:1",
																		"nodeType": "YulLiteral",
																		"src": "335:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "338:4:1",
																		"nodeType": "YulLiteral",
																		"src": "338:4:1",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "328:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "328:6:1"
																},
																"nativeSrc": "328:15:1",
																"nodeType": "YulFunctionCall",
																"src": "328:15:1"
															},
															"nativeSrc": "328:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "328:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "359:1:1",
																		"nodeType": "YulLiteral",
																		"src": "359:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "362:4:1",
																		"nodeType": "YulLiteral",
																		"src": "362:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "352:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "352:6:1"
																},
																"nativeSrc": "352:15:1",
																"nodeType": "YulFunctionCall",
																"src": "352:15:1"
															},
															"nativeSrc": "352:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "352:15:1"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "193:180:1",
												"nodeType": "YulFunctionDefinition",
												"src": "193:180:1"
											}
										]
									},
									"contents": "{\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b506004361061003f575f3560e01c80638269267914610043578063f8a8fd6d1461004d578063febb0f7e14610057575b5f80fd5b61004b610061565b005b610055610110565b005b61005f6101d6565b005b60066002908060018154018082558091505060019003905f5260205f20015f909190919091505560066005908060018154018082558091505060019003905f5260205f20015f909190919091505560066001815481106100c4576100c36102a3565b5b905f5260205f205050600960065f815481106100e3576100e26102a3565b5b905f5260205f20018190555060065f81548110610103576101026102a3565b5b905f5260205f20015f9055565b606460075f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208190555060c860075f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208190555060075f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2050565b5f600a67ffffffffffffffff8111156101f2576101f16102d0565b5b6040519080825280602002602001820160405280156102205781602001602082028036833780820191505090505b5090506002815f81518110610238576102376102a3565b5b60200260200101818152505060048160018151811061025a576102596102a3565b5b602002602001018181525050805f81518110610279576102786102a3565b5b602002602001015150805f81518110610295576102946102a3565b5b602002602001015f81525050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffdfea26469706673582212201f04891380c148081867fe9e678700ba814a28d0c6c3dcd2cc96536828592b6464736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x3F JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x82692679 EQ PUSH2 0x43 JUMPI DUP1 PUSH4 0xF8A8FD6D EQ PUSH2 0x4D JUMPI DUP1 PUSH4 0xFEBB0F7E EQ PUSH2 0x57 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x4B PUSH2 0x61 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x55 PUSH2 0x110 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x5F PUSH2 0x1D6 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x6 PUSH1 0x2 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE PUSH1 0x6 PUSH1 0x5 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE PUSH1 0x6 PUSH1 0x1 DUP2 SLOAD DUP2 LT PUSH2 0xC4 JUMPI PUSH2 0xC3 PUSH2 0x2A3 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 POP POP PUSH1 0x9 PUSH1 0x6 PUSH0 DUP2 SLOAD DUP2 LT PUSH2 0xE3 JUMPI PUSH2 0xE2 PUSH2 0x2A3 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x6 PUSH0 DUP2 SLOAD DUP2 LT PUSH2 0x103 JUMPI PUSH2 0x102 PUSH2 0x2A3 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x64 PUSH1 0x7 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0xC8 PUSH1 0x7 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x7 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 POP JUMP JUMPDEST PUSH0 PUSH1 0xA PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1F2 JUMPI PUSH2 0x1F1 PUSH2 0x2D0 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x220 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x2 DUP2 PUSH0 DUP2 MLOAD DUP2 LT PUSH2 0x238 JUMPI PUSH2 0x237 PUSH2 0x2A3 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH1 0x4 DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x25A JUMPI PUSH2 0x259 PUSH2 0x2A3 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP1 PUSH0 DUP2 MLOAD DUP2 LT PUSH2 0x279 JUMPI PUSH2 0x278 PUSH2 0x2A3 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD POP DUP1 PUSH0 DUP2 MLOAD DUP2 LT PUSH2 0x295 JUMPI PUSH2 0x294 PUSH2 0x2A3 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD PUSH0 DUP2 MSTORE POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x1F DIV DUP10 SGT DUP1 0xC1 BASEFEE ADDMOD XOR PUSH8 0xFE9E678700BA814A 0x28 0xD0 0xC6 0xC3 0xDC 0xD2 0xCC SWAP7 MSTORE8 PUSH9 0x28592B6464736F6C63 NUMBER STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "60:1280:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;352:160;;;:::i;:::-;;764:228;;;:::i;:::-;;520:195;;;:::i;:::-;;352:160;395:5;406:1;395:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;419:5;430:1;419:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;445:5;451:1;445:8;;;;;;;;:::i;:::-;;;;;;;;;;475:1;464:5;470:1;464:8;;;;;;;;:::i;:::-;;;;;;;;;:12;;;;496:5;502:1;496:8;;;;;;;;:::i;:::-;;;;;;;;;489:15;;;352:160::o;764:228::-;823:3;800:8;:20;809:10;800:20;;;;;;;;;;;;;;;:26;;;;860:3;837:8;:20;846:10;837:20;;;;;;;;;;;;;;;:26;;;;874:8;:20;883:10;874:20;;;;;;;;;;;;;;;;764:228::o;520:195::-;555:22;591:2;580:14;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;555:39;;619:1;605:8;614:1;605:11;;;;;;;;:::i;:::-;;;;;;;:15;;;;;645:1;631:8;640:1;631:11;;;;;;;;:::i;:::-;;;;;;;:15;;;;;667:8;676:1;667:11;;;;;;;;:::i;:::-;;;;;;;;;696:8;705:1;696:11;;;;;;;;:::i;:::-;;;;;;;689:18;;;;544:171;520:195::o;7:180:1:-;55:77;52:1;45:88;152:4;149:1;142:15;176:4;173:1;166:15;193:180;241:77;238:1;231:88;338:4;335:1;328:15;362:4;359:1;352:15"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "163800",
								"executionCost": "206",
								"totalCost": "164006"
							},
							"external": {
								"bar()": "630",
								"doSomething()": "126619",
								"test()": "27537"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 60,
									"end": 1340,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 60,
									"end": 1340,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 60,
									"end": 1340,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 60,
									"end": 1340,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 60,
									"end": 1340,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 60,
									"end": 1340,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 60,
									"end": 1340,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 60,
									"end": 1340,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 60,
									"end": 1340,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 60,
									"end": 1340,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 60,
									"end": 1340,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 60,
									"end": 1340,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 60,
									"end": 1340,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 60,
									"end": 1340,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 60,
									"end": 1340,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 60,
									"end": 1340,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 60,
									"end": 1340,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 60,
									"end": 1340,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 60,
									"end": 1340,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 60,
									"end": 1340,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 60,
									"end": 1340,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212201f04891380c148081867fe9e678700ba814a28d0c6c3dcd2cc96536828592b6464736f6c634300081a0033",
									".code": [
										{
											"begin": 60,
											"end": 1340,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 60,
											"end": 1340,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60,
											"end": 1340,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 1340,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 1340,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 1340,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 60,
											"end": 1340,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 60,
											"end": 1340,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60,
											"end": 1340,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60,
											"end": 1340,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 1340,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 60,
											"end": 1340,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 60,
											"end": 1340,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60,
											"end": 1340,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 60,
											"end": 1340,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 60,
											"end": 1340,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 1340,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 60,
											"end": 1340,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 60,
											"end": 1340,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60,
											"end": 1340,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60,
											"end": 1340,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 1340,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 60,
											"end": 1340,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 60,
											"end": 1340,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 1340,
											"name": "PUSH",
											"source": 0,
											"value": "82692679"
										},
										{
											"begin": 60,
											"end": 1340,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 60,
											"end": 1340,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 60,
											"end": 1340,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60,
											"end": 1340,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 1340,
											"name": "PUSH",
											"source": 0,
											"value": "F8A8FD6D"
										},
										{
											"begin": 60,
											"end": 1340,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 60,
											"end": 1340,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 60,
											"end": 1340,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60,
											"end": 1340,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 1340,
											"name": "PUSH",
											"source": 0,
											"value": "FEBB0F7E"
										},
										{
											"begin": 60,
											"end": 1340,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 60,
											"end": 1340,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 60,
											"end": 1340,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60,
											"end": 1340,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 60,
											"end": 1340,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60,
											"end": 1340,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60,
											"end": 1340,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 1340,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 352,
											"end": 512,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 352,
											"end": 512,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 352,
											"end": 512,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 352,
											"end": 512,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 352,
											"end": 512,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 352,
											"end": 512,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 352,
											"end": 512,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 352,
											"end": 512,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 764,
											"end": 992,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 764,
											"end": 992,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 764,
											"end": 992,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 764,
											"end": 992,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 764,
											"end": 992,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 764,
											"end": 992,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 764,
											"end": 992,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 764,
											"end": 992,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 520,
											"end": 715,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 520,
											"end": 715,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 520,
											"end": 715,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 520,
											"end": 715,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 520,
											"end": 715,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 520,
											"end": 715,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 520,
											"end": 715,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 520,
											"end": 715,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 352,
											"end": 512,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 352,
											"end": 512,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 395,
											"end": 400,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 406,
											"end": 407,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 395,
											"end": 408,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 395,
											"end": 408,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 395,
											"end": 408,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 395,
											"end": 408,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 395,
											"end": 408,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 395,
											"end": 408,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 395,
											"end": 408,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 395,
											"end": 408,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 395,
											"end": 408,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 395,
											"end": 408,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 395,
											"end": 408,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 395,
											"end": 408,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 395,
											"end": 408,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 395,
											"end": 408,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 395,
											"end": 408,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 395,
											"end": 408,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 395,
											"end": 408,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 395,
											"end": 408,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 395,
											"end": 408,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 395,
											"end": 408,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 395,
											"end": 408,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 395,
											"end": 408,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 395,
											"end": 408,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 395,
											"end": 408,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 395,
											"end": 408,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 395,
											"end": 408,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 395,
											"end": 408,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 395,
											"end": 408,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 395,
											"end": 408,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 395,
											"end": 408,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 395,
											"end": 408,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 395,
											"end": 408,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 419,
											"end": 424,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 430,
											"end": 431,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 419,
											"end": 432,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 419,
											"end": 432,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 419,
											"end": 432,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 419,
											"end": 432,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 419,
											"end": 432,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 419,
											"end": 432,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 419,
											"end": 432,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 419,
											"end": 432,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 419,
											"end": 432,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 419,
											"end": 432,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 419,
											"end": 432,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 419,
											"end": 432,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 419,
											"end": 432,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 419,
											"end": 432,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 419,
											"end": 432,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 419,
											"end": 432,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 419,
											"end": 432,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 419,
											"end": 432,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 419,
											"end": 432,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 419,
											"end": 432,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 419,
											"end": 432,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 419,
											"end": 432,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 419,
											"end": 432,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 419,
											"end": 432,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 419,
											"end": 432,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 419,
											"end": 432,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 419,
											"end": 432,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 419,
											"end": 432,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 419,
											"end": 432,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 419,
											"end": 432,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 419,
											"end": 432,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 419,
											"end": 432,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 445,
											"end": 450,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 451,
											"end": 452,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 445,
											"end": 453,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 445,
											"end": 453,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 445,
											"end": 453,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 445,
											"end": 453,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 445,
											"end": 453,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 445,
											"end": 453,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 445,
											"end": 453,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 445,
											"end": 453,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 445,
											"end": 453,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 445,
											"end": 453,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 445,
											"end": 453,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 445,
											"end": 453,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 445,
											"end": 453,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 445,
											"end": 453,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 445,
											"end": 453,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 445,
											"end": 453,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 445,
											"end": 453,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 445,
											"end": 453,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 445,
											"end": 453,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 445,
											"end": 453,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 445,
											"end": 453,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 475,
											"end": 476,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 464,
											"end": 469,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 470,
											"end": 471,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 464,
											"end": 472,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 464,
											"end": 472,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 464,
											"end": 472,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 464,
											"end": 472,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 464,
											"end": 472,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 464,
											"end": 472,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 464,
											"end": 472,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 464,
											"end": 472,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 464,
											"end": 472,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 464,
											"end": 472,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 464,
											"end": 472,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 464,
											"end": 472,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 464,
											"end": 472,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 464,
											"end": 472,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 464,
											"end": 472,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 464,
											"end": 472,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 464,
											"end": 472,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 464,
											"end": 472,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 464,
											"end": 472,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 464,
											"end": 472,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 464,
											"end": 476,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 464,
											"end": 476,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 464,
											"end": 476,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 464,
											"end": 476,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 496,
											"end": 501,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 502,
											"end": 503,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 496,
											"end": 504,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 496,
											"end": 504,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 496,
											"end": 504,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 496,
											"end": 504,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 496,
											"end": 504,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 496,
											"end": 504,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 496,
											"end": 504,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 496,
											"end": 504,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 496,
											"end": 504,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 496,
											"end": 504,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 496,
											"end": 504,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 496,
											"end": 504,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 496,
											"end": 504,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 496,
											"end": 504,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 496,
											"end": 504,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 496,
											"end": 504,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 496,
											"end": 504,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 496,
											"end": 504,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 496,
											"end": 504,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 496,
											"end": 504,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 489,
											"end": 504,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 489,
											"end": 504,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 489,
											"end": 504,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 352,
											"end": 512,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 764,
											"end": 992,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 764,
											"end": 992,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 823,
											"end": 826,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 800,
											"end": 808,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 800,
											"end": 820,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 809,
											"end": 819,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 800,
											"end": 820,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 800,
											"end": 820,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 800,
											"end": 820,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 800,
											"end": 820,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 800,
											"end": 820,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 800,
											"end": 820,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 800,
											"end": 820,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 800,
											"end": 820,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 800,
											"end": 820,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 800,
											"end": 820,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 800,
											"end": 820,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 800,
											"end": 820,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 800,
											"end": 820,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 800,
											"end": 820,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 800,
											"end": 820,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 800,
											"end": 826,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 800,
											"end": 826,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 800,
											"end": 826,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 800,
											"end": 826,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 860,
											"end": 863,
											"name": "PUSH",
											"source": 0,
											"value": "C8"
										},
										{
											"begin": 837,
											"end": 845,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 837,
											"end": 857,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 846,
											"end": 856,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 837,
											"end": 857,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 837,
											"end": 857,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 837,
											"end": 857,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 837,
											"end": 857,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 837,
											"end": 857,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 837,
											"end": 857,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 837,
											"end": 857,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 837,
											"end": 857,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 837,
											"end": 857,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 837,
											"end": 857,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 837,
											"end": 857,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 837,
											"end": 857,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 837,
											"end": 857,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 837,
											"end": 857,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 837,
											"end": 857,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 837,
											"end": 863,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 837,
											"end": 863,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 837,
											"end": 863,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 837,
											"end": 863,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 874,
											"end": 882,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 874,
											"end": 894,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 883,
											"end": 893,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 874,
											"end": 894,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 874,
											"end": 894,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 874,
											"end": 894,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 874,
											"end": 894,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 874,
											"end": 894,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 874,
											"end": 894,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 874,
											"end": 894,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 874,
											"end": 894,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 874,
											"end": 894,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 874,
											"end": 894,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 874,
											"end": 894,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 874,
											"end": 894,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 874,
											"end": 894,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 874,
											"end": 894,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 874,
											"end": 894,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 874,
											"end": 894,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 764,
											"end": 992,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 520,
											"end": 715,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 520,
											"end": 715,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 555,
											"end": 577,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 591,
											"end": 593,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 580,
											"end": 594,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 580,
											"end": 594,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 580,
											"end": 594,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 580,
											"end": 594,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 580,
											"end": 594,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 580,
											"end": 594,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 580,
											"end": 594,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 580,
											"end": 594,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 580,
											"end": 594,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 580,
											"end": 594,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 580,
											"end": 594,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 580,
											"end": 594,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 580,
											"end": 594,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 580,
											"end": 594,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 580,
											"end": 594,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 580,
											"end": 594,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 580,
											"end": 594,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 580,
											"end": 594,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 580,
											"end": 594,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 580,
											"end": 594,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 580,
											"end": 594,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 580,
											"end": 594,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 580,
											"end": 594,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 580,
											"end": 594,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 580,
											"end": 594,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 580,
											"end": 594,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 580,
											"end": 594,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 580,
											"end": 594,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 580,
											"end": 594,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 580,
											"end": 594,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 580,
											"end": 594,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 580,
											"end": 594,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 580,
											"end": 594,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 580,
											"end": 594,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 580,
											"end": 594,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 580,
											"end": 594,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 580,
											"end": 594,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 580,
											"end": 594,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 580,
											"end": 594,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 580,
											"end": 594,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 580,
											"end": 594,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 580,
											"end": 594,
											"name": "CALLDATACOPY",
											"source": 0
										},
										{
											"begin": 580,
											"end": 594,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 580,
											"end": 594,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 580,
											"end": 594,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 580,
											"end": 594,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 580,
											"end": 594,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 580,
											"end": 594,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 580,
											"end": 594,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 580,
											"end": 594,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 580,
											"end": 594,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 580,
											"end": 594,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 580,
											"end": 594,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 555,
											"end": 594,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 555,
											"end": 594,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 619,
											"end": 620,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 605,
											"end": 613,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 614,
											"end": 615,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 605,
											"end": 616,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 605,
											"end": 616,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 605,
											"end": 616,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 605,
											"end": 616,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 605,
											"end": 616,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 605,
											"end": 616,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 605,
											"end": 616,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 605,
											"end": 616,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 605,
											"end": 616,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 605,
											"end": 616,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 605,
											"end": 616,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 605,
											"end": 616,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 605,
											"end": 616,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 605,
											"end": 616,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 605,
											"end": 616,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 605,
											"end": 616,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 605,
											"end": 616,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 605,
											"end": 616,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 605,
											"end": 620,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 605,
											"end": 620,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 605,
											"end": 620,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 605,
											"end": 620,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 605,
											"end": 620,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 645,
											"end": 646,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 631,
											"end": 639,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 640,
											"end": 641,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 631,
											"end": 642,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 631,
											"end": 642,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 631,
											"end": 642,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 631,
											"end": 642,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 631,
											"end": 642,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 631,
											"end": 642,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 631,
											"end": 642,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 631,
											"end": 642,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 631,
											"end": 642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 631,
											"end": 642,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 631,
											"end": 642,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 631,
											"end": 642,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 631,
											"end": 642,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 631,
											"end": 642,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 631,
											"end": 642,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 631,
											"end": 642,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 631,
											"end": 642,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 631,
											"end": 642,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 631,
											"end": 646,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 631,
											"end": 646,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 631,
											"end": 646,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 631,
											"end": 646,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 631,
											"end": 646,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 667,
											"end": 675,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 676,
											"end": 677,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 667,
											"end": 678,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 667,
											"end": 678,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 667,
											"end": 678,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 667,
											"end": 678,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 667,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 667,
											"end": 678,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 667,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 667,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 667,
											"end": 678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 667,
											"end": 678,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 667,
											"end": 678,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 667,
											"end": 678,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 667,
											"end": 678,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 667,
											"end": 678,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 667,
											"end": 678,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 667,
											"end": 678,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 667,
											"end": 678,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 667,
											"end": 678,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 667,
											"end": 678,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 667,
											"end": 678,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 696,
											"end": 704,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 705,
											"end": 706,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 696,
											"end": 707,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 696,
											"end": 707,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 696,
											"end": 707,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 696,
											"end": 707,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 696,
											"end": 707,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 696,
											"end": 707,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 696,
											"end": 707,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 696,
											"end": 707,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 696,
											"end": 707,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 696,
											"end": 707,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 696,
											"end": 707,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 696,
											"end": 707,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 696,
											"end": 707,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 696,
											"end": 707,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 696,
											"end": 707,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 696,
											"end": 707,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 696,
											"end": 707,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 696,
											"end": 707,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 689,
											"end": 707,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 689,
											"end": 707,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 689,
											"end": 707,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 689,
											"end": 707,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 544,
											"end": 715,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 520,
											"end": 715,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7,
											"end": 187,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 7,
											"end": 187,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 55,
											"end": 132,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 52,
											"end": 53,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 45,
											"end": 133,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 152,
											"end": 156,
											"name": "PUSH",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 149,
											"end": 150,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 142,
											"end": 157,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 176,
											"end": 180,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 173,
											"end": 174,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 166,
											"end": 181,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 193,
											"end": 373,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 193,
											"end": 373,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 241,
											"end": 318,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 238,
											"end": 239,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 231,
											"end": 319,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 338,
											"end": 342,
											"name": "PUSH",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 335,
											"end": 336,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 328,
											"end": 343,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 362,
											"end": 366,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 359,
											"end": 360,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 352,
											"end": 367,
											"name": "REVERT",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"contracts/DataType.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"bar()": "febb0f7e",
							"doSomething()": "82692679",
							"test()": "f8a8fd6d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"bar\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"doSomething\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/DataType.sol\":\"DataType\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/DataType.sol\":{\"keccak256\":\"0xde9f3d2eff4e154bf0cd351a6693362534f94d6ac4edb4b98e52a2168c407d9b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0f057e415bce62af9fd02de9c38cdc14dd92485585ff46351a2bd7b442a2c216\",\"dweb:/ipfs/Qma9N7fqZnjbhAXbYuzuNU6iGzKcFF56apZLZ5FbuRn7C1\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 3,
								"contract": "contracts/DataType.sol:DataType",
								"label": "isEnable",
								"offset": 0,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 5,
								"contract": "contracts/DataType.sol:DataType",
								"label": "a",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 7,
								"contract": "contracts/DataType.sol:DataType",
								"label": "sender",
								"offset": 0,
								"slot": "2",
								"type": "t_address"
							},
							{
								"astId": 9,
								"contract": "contracts/DataType.sol:DataType",
								"label": "data",
								"offset": 0,
								"slot": "3",
								"type": "t_bytes32"
							},
							{
								"astId": 11,
								"contract": "contracts/DataType.sol:DataType",
								"label": "name",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 13,
								"contract": "contracts/DataType.sol:DataType",
								"label": "data1",
								"offset": 0,
								"slot": "5",
								"type": "t_bytes_storage"
							},
							{
								"astId": 16,
								"contract": "contracts/DataType.sol:DataType",
								"label": "array",
								"offset": 0,
								"slot": "6",
								"type": "t_array(t_uint256)dyn_storage"
							},
							{
								"astId": 87,
								"contract": "contracts/DataType.sol:DataType",
								"label": "balances",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 116,
								"contract": "contracts/DataType.sol:DataType",
								"label": "approved",
								"offset": 0,
								"slot": "8",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_uint256)dyn_storage": {
								"base": "t_uint256",
								"encoding": "dynamic_array",
								"label": "uint256[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_bytes_storage": {
								"encoding": "bytes",
								"label": "bytes",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "2018",
				"formattedMessage": "Warning: Function state mutability can be restricted to pure\n  --> contracts/DataType.sol:27:5:\n   |\n27 |     function bar() external {\n   |     ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "Function state mutability can be restricted to pure",
				"severity": "warning",
				"sourceLocation": {
					"end": 715,
					"file": "contracts/DataType.sol",
					"start": 520
				},
				"type": "Warning"
			}
		],
		"sources": {
			"contracts/DataType.sol": {
				"ast": {
					"absolutePath": "contracts/DataType.sol",
					"exportedSymbols": {
						"DataType": [
							128
						]
					},
					"id": 129,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"0.8",
								".26"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "DataType",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 128,
							"linearizedBaseContracts": [
								128
							],
							"name": "DataType",
							"nameLocation": "69:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 3,
									"mutability": "mutable",
									"name": "isEnable",
									"nameLocation": "116:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 128,
									"src": "111:13:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 2,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "111:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 5,
									"mutability": "mutable",
									"name": "a",
									"nameLocation": "150:1:0",
									"nodeType": "VariableDeclaration",
									"scope": 128,
									"src": "145:6:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 4,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "145:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 7,
									"mutability": "mutable",
									"name": "sender",
									"nameLocation": "177:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 128,
									"src": "169:14:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 6,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "169:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 9,
									"mutability": "mutable",
									"name": "data",
									"nameLocation": "222:4:0",
									"nodeType": "VariableDeclaration",
									"scope": 128,
									"src": "214:12:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 8,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "214:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 11,
									"mutability": "mutable",
									"name": "name",
									"nameLocation": "269:4:0",
									"nodeType": "VariableDeclaration",
									"scope": 128,
									"src": "262:11:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 10,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "262:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 13,
									"mutability": "mutable",
									"name": "data1",
									"nameLocation": "303:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 128,
									"src": "297:11:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes_storage",
										"typeString": "bytes"
									},
									"typeName": {
										"id": 12,
										"name": "bytes",
										"nodeType": "ElementaryTypeName",
										"src": "297:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes_storage_ptr",
											"typeString": "bytes"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 16,
									"mutability": "mutable",
									"name": "array",
									"nameLocation": "322:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 128,
									"src": "315:12:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
										"typeString": "uint256[]"
									},
									"typeName": {
										"baseType": {
											"id": 14,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "315:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 15,
										"nodeType": "ArrayTypeName",
										"src": "315:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
											"typeString": "uint256[]"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 46,
										"nodeType": "Block",
										"src": "384:128:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"hexValue": "32",
															"id": 22,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "406:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															}
														],
														"expression": {
															"id": 19,
															"name": "array",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 16,
															"src": "395:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																"typeString": "uint256[] storage ref"
															}
														},
														"id": 21,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "401:4:0",
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "395:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$attached_to$_t_array$_t_uint256_$dyn_storage_ptr_$",
															"typeString": "function (uint256[] storage pointer,uint256)"
														}
													},
													"id": 23,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "395:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 24,
												"nodeType": "ExpressionStatement",
												"src": "395:13:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"hexValue": "35",
															"id": 28,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "430:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_5_by_1",
																"typeString": "int_const 5"
															},
															"value": "5"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_5_by_1",
																"typeString": "int_const 5"
															}
														],
														"expression": {
															"id": 25,
															"name": "array",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 16,
															"src": "419:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																"typeString": "uint256[] storage ref"
															}
														},
														"id": 27,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "425:4:0",
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "419:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$attached_to$_t_array$_t_uint256_$dyn_storage_ptr_$",
															"typeString": "function (uint256[] storage pointer,uint256)"
														}
													},
													"id": 29,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "419:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 30,
												"nodeType": "ExpressionStatement",
												"src": "419:13:0"
											},
											{
												"expression": {
													"baseExpression": {
														"id": 31,
														"name": "array",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 16,
														"src": "445:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
															"typeString": "uint256[] storage ref"
														}
													},
													"id": 33,
													"indexExpression": {
														"hexValue": "31",
														"id": 32,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "451:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "445:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 34,
												"nodeType": "ExpressionStatement",
												"src": "445:8:0"
											},
											{
												"expression": {
													"id": 39,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 35,
															"name": "array",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 16,
															"src": "464:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																"typeString": "uint256[] storage ref"
															}
														},
														"id": 37,
														"indexExpression": {
															"hexValue": "30",
															"id": 36,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "470:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "464:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "39",
														"id": 38,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "475:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_9_by_1",
															"typeString": "int_const 9"
														},
														"value": "9"
													},
													"src": "464:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 40,
												"nodeType": "ExpressionStatement",
												"src": "464:12:0"
											},
											{
												"expression": {
													"id": 44,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "489:15:0",
													"subExpression": {
														"baseExpression": {
															"id": 41,
															"name": "array",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 16,
															"src": "496:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																"typeString": "uint256[] storage ref"
															}
														},
														"id": 43,
														"indexExpression": {
															"hexValue": "30",
															"id": 42,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "502:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "496:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 45,
												"nodeType": "ExpressionStatement",
												"src": "489:15:0"
											}
										]
									},
									"functionSelector": "82692679",
									"id": 47,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "doSomething",
									"nameLocation": "361:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "372:2:0"
									},
									"returnParameters": {
										"id": 18,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "384:0:0"
									},
									"scope": 128,
									"src": "352:160:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 82,
										"nodeType": "Block",
										"src": "544:171:0",
										"statements": [
											{
												"assignments": [
													54
												],
												"declarations": [
													{
														"constant": false,
														"id": 54,
														"mutability": "mutable",
														"name": "newArray",
														"nameLocation": "569:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 82,
														"src": "555:22:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 52,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "555:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 53,
															"nodeType": "ArrayTypeName",
															"src": "555:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 60,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "3130",
															"id": 58,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "591:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_10_by_1",
																"typeString": "int_const 10"
															},
															"value": "10"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_10_by_1",
																"typeString": "int_const 10"
															}
														],
														"id": 57,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "580:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 55,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "584:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 56,
															"nodeType": "ArrayTypeName",
															"src": "584:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														}
													},
													"id": 59,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "580:14:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "555:39:0"
											},
											{
												"expression": {
													"id": 65,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 61,
															"name": "newArray",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 54,
															"src": "605:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 63,
														"indexExpression": {
															"hexValue": "30",
															"id": 62,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "614:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "605:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "32",
														"id": 64,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "619:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2_by_1",
															"typeString": "int_const 2"
														},
														"value": "2"
													},
													"src": "605:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 66,
												"nodeType": "ExpressionStatement",
												"src": "605:15:0"
											},
											{
												"expression": {
													"id": 71,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 67,
															"name": "newArray",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 54,
															"src": "631:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 69,
														"indexExpression": {
															"hexValue": "31",
															"id": 68,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "640:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "631:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "34",
														"id": 70,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "645:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_4_by_1",
															"typeString": "int_const 4"
														},
														"value": "4"
													},
													"src": "631:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 72,
												"nodeType": "ExpressionStatement",
												"src": "631:15:0"
											},
											{
												"expression": {
													"baseExpression": {
														"id": 73,
														"name": "newArray",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 54,
														"src": "667:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[] memory"
														}
													},
													"id": 75,
													"indexExpression": {
														"hexValue": "30",
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "676:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "667:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 76,
												"nodeType": "ExpressionStatement",
												"src": "667:11:0"
											},
											{
												"expression": {
													"id": 80,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "689:18:0",
													"subExpression": {
														"baseExpression": {
															"id": 77,
															"name": "newArray",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 54,
															"src": "696:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 79,
														"indexExpression": {
															"hexValue": "30",
															"id": 78,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "705:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "696:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 81,
												"nodeType": "ExpressionStatement",
												"src": "689:18:0"
											}
										]
									},
									"functionSelector": "febb0f7e",
									"id": 83,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "bar",
									"nameLocation": "529:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "532:2:0"
									},
									"returnParameters": {
										"id": 49,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "544:0:0"
									},
									"scope": 128,
									"src": "520:195:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"constant": false,
									"id": 87,
									"mutability": "mutable",
									"name": "balances",
									"nameLocation": "749:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 128,
									"src": "723:34:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 86,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 84,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "732:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "723:25:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 85,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "743:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 109,
										"nodeType": "Block",
										"src": "789:203:0",
										"statements": [
											{
												"expression": {
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 90,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 87,
															"src": "800:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 93,
														"indexExpression": {
															"expression": {
																"id": 91,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "809:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 92,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "813:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "809:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "800:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "313030",
														"id": 94,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "823:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_100_by_1",
															"typeString": "int_const 100"
														},
														"value": "100"
													},
													"src": "800:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "800:26:0"
											},
											{
												"expression": {
													"id": 102,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 97,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 87,
															"src": "837:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 100,
														"indexExpression": {
															"expression": {
																"id": 98,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "846:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 99,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "850:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "846:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "837:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "323030",
														"id": 101,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "860:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_200_by_1",
															"typeString": "int_const 200"
														},
														"value": "200"
													},
													"src": "837:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 103,
												"nodeType": "ExpressionStatement",
												"src": "837:26:0"
											},
											{
												"expression": {
													"baseExpression": {
														"id": 104,
														"name": "balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 87,
														"src": "874:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 107,
													"indexExpression": {
														"expression": {
															"id": 105,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "883:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 106,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "887:6:0",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "883:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "874:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 108,
												"nodeType": "ExpressionStatement",
												"src": "874:20:0"
											}
										]
									},
									"functionSelector": "f8a8fd6d",
									"id": 110,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "test",
									"nameLocation": "773:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 88,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "777:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "789:0:0"
									},
									"scope": 128,
									"src": "764:228:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"constant": false,
									"id": 116,
									"mutability": "mutable",
									"name": "approved",
									"nameLocation": "1070:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 128,
									"src": "1023:55:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
										"typeString": "mapping(address => mapping(address => bool))"
									},
									"typeName": {
										"id": 115,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 111,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1032:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1023:46:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
											"typeString": "mapping(address => mapping(address => bool))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 114,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 112,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1052:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1043:25:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 113,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1063:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "internal"
								},
								{
									"canonicalName": "DataType.User",
									"id": 123,
									"members": [
										{
											"constant": false,
											"id": 118,
											"mutability": "mutable",
											"name": "id",
											"nameLocation": "1137:2:0",
											"nodeType": "VariableDeclaration",
											"scope": 123,
											"src": "1132:7:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 117,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "1132:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 120,
											"mutability": "mutable",
											"name": "name",
											"nameLocation": "1157:4:0",
											"nodeType": "VariableDeclaration",
											"scope": 123,
											"src": "1150:11:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 119,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "1150:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 122,
											"mutability": "mutable",
											"name": "isFriend",
											"nameLocation": "1177:8:0",
											"nodeType": "VariableDeclaration",
											"scope": 123,
											"src": "1172:13:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 121,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1172:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "User",
									"nameLocation": "1116:4:0",
									"nodeType": "StructDefinition",
									"scope": 128,
									"src": "1109:84:0",
									"visibility": "public"
								},
								{
									"canonicalName": "DataType.Color",
									"id": 127,
									"members": [
										{
											"id": 124,
											"name": "RED",
											"nameLocation": "1223:3:0",
											"nodeType": "EnumValue",
											"src": "1223:3:0"
										},
										{
											"id": 125,
											"name": "GREED",
											"nameLocation": "1238:5:0",
											"nodeType": "EnumValue",
											"src": "1238:5:0"
										},
										{
											"id": 126,
											"name": "BLUE",
											"nameLocation": "1255:4:0",
											"nodeType": "EnumValue",
											"src": "1255:4:0"
										}
									],
									"name": "Color",
									"nameLocation": "1206:5:0",
									"nodeType": "EnumDefinition",
									"src": "1201:65:0"
								}
							],
							"scope": 129,
							"src": "60:1280:0",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "33:1307:0"
				},
				"id": 0
			}
		}
	}
}